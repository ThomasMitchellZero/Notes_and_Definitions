Five Rules of a Fiori Interface:

1:  Role-based.  On the screen, you should only see options relevant to who you are.  Should use your terminology, be adapted for who you are and how you work.  
2: Adaptive.  Works across all platforms from a single code base, and adapts to multiple use cases.

3:  Coherent.  It should have a consistent look, feel, and functionality internally, and also across different platforms.

4:  Simple.  Include only what is necessary.  

5:  Delightful.  Violates expectations in a positive way.


--


Making a new page (extending the application?)

1.  Start by making the basics with the app template.  In Eclipse that is New > Other... > UI5 >  application template.  Then follow the dropdowns.  This creates the correct folder structure.  



Open questions:

-How exactly does scope work in UI5?

-Are all views created when the script in index.js is run?  Then it just shows you whichever one you have navigated to?  


Java FX Gluon has a really good MVC explanation.  

OK!  Just solved a tough problem and I think this one will come up again!  So I ran my code and got an error, something to the effect of: 

 sap.ui.layout.form.SimpleForm is not a constructor

 I checked my syntax and found that it was indeed a constructor.  Then, after some google-fu, what I found was that I only had one library on the index.html page.  I had:

 data-sap-ui-libs="sap.m"

 So the error was correct!  There was no function constructor named SimpleForm because the only library I had loaded was   sap.m    library.  Once I loaded other libraries:

data-sap-ui-libs="sap.m,sap.ui.commons,sap.ui.layout,sap.ui.table"

everything worked just fine!